<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openjfx</groupId>
  <artifactId>student-tracker</artifactId>
  <packaging>jar</packaging>
  <version>0.1</version>
  <name>demo</name>
  <url>http://maven.apache.org</url>

  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <java.version>21</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <javafx.version>21</javafx.version>
    <javafxml.version>21</javafxml.version>
    <dbutils.version>1.7</dbutils.version>
    <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
    <sqlite-jdbc.version>3.50.3.0</sqlite-jdbc.version>
    <lombok.version>1.18.40</lombok.version>
    <guice.version>7.0.0</guice.version>
    
    <launcher-class>io.github.unchangingconstant.studenttracker.Launcher</launcher-class>
    <environment>dev</environment>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>${sqlite-jdbc.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafxml.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- jdbi dependencies' versions are managed by jdbi3-bom -->
    <dependency>
        <groupId>org.jdbi</groupId>
        <artifactId>jdbi3-core</artifactId>
    </dependency>
    <dependency>
        <groupId>org.jdbi</groupId>
        <artifactId>jdbi3-sqlobject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi3-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- junit dependencies' versions are managed by junit-bom -->
    <dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
    <!-- For dependency injection and management -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guice.version}</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jdbi</groupId>
        <artifactId>jdbi3-bom</artifactId>
        <version>3.49.5</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency> 
      <dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.13.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>

      <!-- What does this do again? Oh, I think it compiles my application jar into the output directory-->
      <!-- Come to think of it, these next two plugins just override the default maven plugin config, right? -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
            <outputDirectory>${project.build.directory}/distributions</outputDirectory>
        </configuration>
      </plugin>

      <!-- This copies project dependencies into the target folder for packaging -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
            <execution>
                <id>copy-dependencies</id>
                <phase>package</phase>
                <goals>
                    <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <includeScope>runtime</includeScope>
                  <!-- TODO name this folder better -->
                  <outputDirectory>${project.build.directory}/compiled</outputDirectory>
                </configuration>
            </execution>
        </executions>
      </plugin>

      <!-- This is to run the program for quick testing -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>${javafx.maven.plugin.version}</version>
        <configuration>
          <mainClass>${launcher-class}</mainClass>
        </configuration>
      </plugin>

      <!-- jpackage provides mvn commands to package and deploy this application -->
      <plugin>
        <groupId>org.panteleyev</groupId>
        <artifactId>jpackage-maven-plugin</artifactId>
        <version>1.7.1</version>
        <configuration>
          <input>${project.build.directory}/compiled</input>
          <mainJar>${project.artifactId}-${project.version}.jar</mainJar>
          <mainClass>${launcher-class}</mainClass>
          <name>StudentTrackerApp</name>
          <destination>${project.build.directory}/distribution</destination>
          <type>APP_IMAGE</type> 
          <javaOptions>
            <option>-Djavafx.verbose=true</option>
          </javaOptions>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>